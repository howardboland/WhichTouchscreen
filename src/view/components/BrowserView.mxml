<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Script>
		<![CDATA[
			import com.which.utils.Console;
			
			public static var GO_BACK:String = "GO_BACK";
			
			[Bindable]
			protected var url:String="";
			
			
			public function open(url:String):void
			{
				this.url = url;
				//TODO: JIGGERY POKERY TO DEAL WITH IFRAME ETC. ON WEBDEPLOYMENT
				if (ExternalInterface.available)
				{
					ExternalInterface.call( "openURL", url );
					ExternalInterface.addCallback("closeWeb",  back);
				}
				
			}
			protected function back( e:MouseEvent=null ):void
			{
				Console.log("BACK", this)
				ExternalInterface.addCallback("closeWeb",  null);
				this.dispatchEvent( new Event( GO_BACK ));
			}
			/*
			
			protected var htmlLoader:HTMLLoader;
			public function init(event:Event=null):void
			{
				Console.log("*** INIT BrowserView ***", this);
				
				htmlLoader = new HTMLLoader();
				htmlLoader.cacheResponse=false;
				htmlLoader.useCache=false;
	
			}
			
			protected function createBrowser(url:String):void 
			{
				Console.log("CREATING BROWSER", this);
				URLRequestDefaults.manageCookies=false;
				htmlLoader.width=container.width;
				htmlLoader.height=container.height;
				htmlLoader.scaleX=htmlLoader.scaleY=1;
				
				
				htmlLoader.addEventListener( LocationChangeEvent.LOCATION_CHANGING, onURLChanging );
				htmlLoader.addEventListener( LocationChangeEvent.LOCATION_CHANGING, onURLChange );
				htmlLoader.addEventListener( Event.COMPLETE, onURLCompleted);    
				htmlLoader.load( new URLRequest(url) );
			}
			
			protected function onURLChange(e:LocationChangeEvent):void
			{
				if(e.location.indexOf("which.co.uk") != -1) {
					URLRequestDefaults.manageCookies=true;
				} else {
					// user navigating away from site
					
				}
			}
			protected function onURLCompleted( e:Event ):void
			{
				URLRequestDefaults.manageCookies=true;
				status_label.text = "URL LOADING COMPLETE";
				this.webContainer.visible = true;
				webContainer.addChild( htmlLoader ); 
				
			}
			*/
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer width="100%" height="100%" id="container" borderAlpha="0" >
		<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Label id="status_label" includeInLayout="false" text="status" color="0x000000" />
			<s:Spacer height="20"/>
			<s:Label textAlign="center" text="Connecting to...{url}" fontSize="18" id="urlText" />
			<s:Label textAlign="center" text="INTERNAL BROWSER ONLY SUPPORTED ON DESKTOP OPERATING SYSTEMS USING ADOBE AIR DEPLOYMENT" fontSize="10" />
			<s:Label color="0x000000" text="TOUCH AND RETURN TO TOUCHSCREEN" fontWeight="bold" click="back(event)" fontSize="10" />

		</s:VGroup>
		<mx:UIComponent id="webContainer" />
			</s:BorderContainer>
</s:NavigatorContent>
